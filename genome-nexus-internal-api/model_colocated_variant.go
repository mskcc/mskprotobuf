/*
Genome Nexus API

This page shows how to use HTTP requests to access the Genome Nexus API. There are more high level clients available in Python, R, JavaScript, TypeScript and various other languages as well as a command line client to annotate MAF and VCF. See https://docs.genomenexus.org/api.  Aside from programmatic clients there are web based tools to annotate variants, see https://docs.genomenexus.org/tools.   We currently only provide long-term support for the '/annotation' endpoint. The other endpoints might change.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package genome_nexus_internal_api

import (
	"encoding/json"
)

// ColocatedVariant struct for ColocatedVariant
type ColocatedVariant struct {
	DbSnpId *string `json:"dbSnpId,omitempty"`
	// GnomAD Non-Finnish European Allele
	GnomadNfeAllele string `json:"gnomad_nfe_allele"`
	// GnomAD Non-Finnish European MAF
	GnomadNfeMaf string `json:"gnomad_nfe_maf"`
	// GnomAD African/African American Allele
	GnomadAfrAllele string `json:"gnomad_afr_allele"`
	// GnomAD African/African American MAF
	GnomadAfrMaf string `json:"gnomad_afr_maf"`
	// GnomAD East Asian Allele
	GnomadEasAllele string `json:"gnomad_eas_allele"`
	// GnomAD East Asian MAF
	GnomadEasMaf string `json:"gnomad_eas_maf"`
}

// NewColocatedVariant instantiates a new ColocatedVariant object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewColocatedVariant(gnomadNfeAllele string, gnomadNfeMaf string, gnomadAfrAllele string, gnomadAfrMaf string, gnomadEasAllele string, gnomadEasMaf string) *ColocatedVariant {
	this := ColocatedVariant{}
	this.GnomadNfeAllele = gnomadNfeAllele
	this.GnomadNfeMaf = gnomadNfeMaf
	this.GnomadAfrAllele = gnomadAfrAllele
	this.GnomadAfrMaf = gnomadAfrMaf
	this.GnomadEasAllele = gnomadEasAllele
	this.GnomadEasMaf = gnomadEasMaf
	return &this
}

// NewColocatedVariantWithDefaults instantiates a new ColocatedVariant object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewColocatedVariantWithDefaults() *ColocatedVariant {
	this := ColocatedVariant{}
	return &this
}

// GetDbSnpId returns the DbSnpId field value if set, zero value otherwise.
func (o *ColocatedVariant) GetDbSnpId() string {
	if o == nil || isNil(o.DbSnpId) {
		var ret string
		return ret
	}
	return *o.DbSnpId
}

// GetDbSnpIdOk returns a tuple with the DbSnpId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ColocatedVariant) GetDbSnpIdOk() (*string, bool) {
	if o == nil || isNil(o.DbSnpId) {
    return nil, false
	}
	return o.DbSnpId, true
}

// HasDbSnpId returns a boolean if a field has been set.
func (o *ColocatedVariant) HasDbSnpId() bool {
	if o != nil && !isNil(o.DbSnpId) {
		return true
	}

	return false
}

// SetDbSnpId gets a reference to the given string and assigns it to the DbSnpId field.
func (o *ColocatedVariant) SetDbSnpId(v string) {
	o.DbSnpId = &v
}

// GetGnomadNfeAllele returns the GnomadNfeAllele field value
func (o *ColocatedVariant) GetGnomadNfeAllele() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GnomadNfeAllele
}

// GetGnomadNfeAlleleOk returns a tuple with the GnomadNfeAllele field value
// and a boolean to check if the value has been set.
func (o *ColocatedVariant) GetGnomadNfeAlleleOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.GnomadNfeAllele, true
}

// SetGnomadNfeAllele sets field value
func (o *ColocatedVariant) SetGnomadNfeAllele(v string) {
	o.GnomadNfeAllele = v
}

// GetGnomadNfeMaf returns the GnomadNfeMaf field value
func (o *ColocatedVariant) GetGnomadNfeMaf() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GnomadNfeMaf
}

// GetGnomadNfeMafOk returns a tuple with the GnomadNfeMaf field value
// and a boolean to check if the value has been set.
func (o *ColocatedVariant) GetGnomadNfeMafOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.GnomadNfeMaf, true
}

// SetGnomadNfeMaf sets field value
func (o *ColocatedVariant) SetGnomadNfeMaf(v string) {
	o.GnomadNfeMaf = v
}

// GetGnomadAfrAllele returns the GnomadAfrAllele field value
func (o *ColocatedVariant) GetGnomadAfrAllele() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GnomadAfrAllele
}

// GetGnomadAfrAlleleOk returns a tuple with the GnomadAfrAllele field value
// and a boolean to check if the value has been set.
func (o *ColocatedVariant) GetGnomadAfrAlleleOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.GnomadAfrAllele, true
}

// SetGnomadAfrAllele sets field value
func (o *ColocatedVariant) SetGnomadAfrAllele(v string) {
	o.GnomadAfrAllele = v
}

// GetGnomadAfrMaf returns the GnomadAfrMaf field value
func (o *ColocatedVariant) GetGnomadAfrMaf() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GnomadAfrMaf
}

// GetGnomadAfrMafOk returns a tuple with the GnomadAfrMaf field value
// and a boolean to check if the value has been set.
func (o *ColocatedVariant) GetGnomadAfrMafOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.GnomadAfrMaf, true
}

// SetGnomadAfrMaf sets field value
func (o *ColocatedVariant) SetGnomadAfrMaf(v string) {
	o.GnomadAfrMaf = v
}

// GetGnomadEasAllele returns the GnomadEasAllele field value
func (o *ColocatedVariant) GetGnomadEasAllele() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GnomadEasAllele
}

// GetGnomadEasAlleleOk returns a tuple with the GnomadEasAllele field value
// and a boolean to check if the value has been set.
func (o *ColocatedVariant) GetGnomadEasAlleleOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.GnomadEasAllele, true
}

// SetGnomadEasAllele sets field value
func (o *ColocatedVariant) SetGnomadEasAllele(v string) {
	o.GnomadEasAllele = v
}

// GetGnomadEasMaf returns the GnomadEasMaf field value
func (o *ColocatedVariant) GetGnomadEasMaf() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GnomadEasMaf
}

// GetGnomadEasMafOk returns a tuple with the GnomadEasMaf field value
// and a boolean to check if the value has been set.
func (o *ColocatedVariant) GetGnomadEasMafOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.GnomadEasMaf, true
}

// SetGnomadEasMaf sets field value
func (o *ColocatedVariant) SetGnomadEasMaf(v string) {
	o.GnomadEasMaf = v
}

func (o ColocatedVariant) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.DbSnpId) {
		toSerialize["dbSnpId"] = o.DbSnpId
	}
	if true {
		toSerialize["gnomad_nfe_allele"] = o.GnomadNfeAllele
	}
	if true {
		toSerialize["gnomad_nfe_maf"] = o.GnomadNfeMaf
	}
	if true {
		toSerialize["gnomad_afr_allele"] = o.GnomadAfrAllele
	}
	if true {
		toSerialize["gnomad_afr_maf"] = o.GnomadAfrMaf
	}
	if true {
		toSerialize["gnomad_eas_allele"] = o.GnomadEasAllele
	}
	if true {
		toSerialize["gnomad_eas_maf"] = o.GnomadEasMaf
	}
	return json.Marshal(toSerialize)
}

type NullableColocatedVariant struct {
	value *ColocatedVariant
	isSet bool
}

func (v NullableColocatedVariant) Get() *ColocatedVariant {
	return v.value
}

func (v *NullableColocatedVariant) Set(val *ColocatedVariant) {
	v.value = val
	v.isSet = true
}

func (v NullableColocatedVariant) IsSet() bool {
	return v.isSet
}

func (v *NullableColocatedVariant) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableColocatedVariant(val *ColocatedVariant) *NullableColocatedVariant {
	return &NullableColocatedVariant{value: val, isSet: true}
}

func (v NullableColocatedVariant) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableColocatedVariant) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


