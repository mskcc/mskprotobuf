/*
Genome Nexus API

This page shows how to use HTTP requests to access the Genome Nexus API. There are more high level clients available in Python, R, JavaScript, TypeScript and various other languages as well as a command line client to annotate MAF and VCF. See https://docs.genomenexus.org/api.  Aside from programmatic clients there are web based tools to annotate variants, see https://docs.genomenexus.org/tools.   We currently only provide long-term support for the '/annotation' endpoint. The other endpoints might change.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package genome_nexus_internal_api

import (
	"encoding/json"
)

// EnsemblTranscript struct for EnsemblTranscript
type EnsemblTranscript struct {
	UniprotId *string `json:"uniprotId,omitempty"`
	// Ensembl transcript id
	TranscriptId string `json:"transcriptId"`
	// Ensembl gene id
	GeneId string `json:"geneId"`
	// Ensembl protein id
	ProteinId string `json:"proteinId"`
	// Length of protein
	ProteinLength *int32 `json:"proteinLength,omitempty"`
	// Pfam domains
	PfamDomains []PfamDomainRange `json:"pfamDomains,omitempty"`
	// Hugo symbols
	HugoSymbols []string `json:"hugoSymbols,omitempty"`
	// RefSeq mRNA ID
	RefseqMrnaId *string `json:"refseqMrnaId,omitempty"`
	// Consensus CDS (CCDS) ID
	CcdsId *string `json:"ccdsId,omitempty"`
	// Exon information
	Exons []Exon `json:"exons,omitempty"`
	// UTR information
	Utrs []UntranslatedRegion `json:"utrs,omitempty"`
}

// NewEnsemblTranscript instantiates a new EnsemblTranscript object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnsemblTranscript(transcriptId string, geneId string, proteinId string) *EnsemblTranscript {
	this := EnsemblTranscript{}
	this.TranscriptId = transcriptId
	this.GeneId = geneId
	this.ProteinId = proteinId
	return &this
}

// NewEnsemblTranscriptWithDefaults instantiates a new EnsemblTranscript object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnsemblTranscriptWithDefaults() *EnsemblTranscript {
	this := EnsemblTranscript{}
	return &this
}

// GetUniprotId returns the UniprotId field value if set, zero value otherwise.
func (o *EnsemblTranscript) GetUniprotId() string {
	if o == nil || isNil(o.UniprotId) {
		var ret string
		return ret
	}
	return *o.UniprotId
}

// GetUniprotIdOk returns a tuple with the UniprotId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnsemblTranscript) GetUniprotIdOk() (*string, bool) {
	if o == nil || isNil(o.UniprotId) {
    return nil, false
	}
	return o.UniprotId, true
}

// HasUniprotId returns a boolean if a field has been set.
func (o *EnsemblTranscript) HasUniprotId() bool {
	if o != nil && !isNil(o.UniprotId) {
		return true
	}

	return false
}

// SetUniprotId gets a reference to the given string and assigns it to the UniprotId field.
func (o *EnsemblTranscript) SetUniprotId(v string) {
	o.UniprotId = &v
}

// GetTranscriptId returns the TranscriptId field value
func (o *EnsemblTranscript) GetTranscriptId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TranscriptId
}

// GetTranscriptIdOk returns a tuple with the TranscriptId field value
// and a boolean to check if the value has been set.
func (o *EnsemblTranscript) GetTranscriptIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.TranscriptId, true
}

// SetTranscriptId sets field value
func (o *EnsemblTranscript) SetTranscriptId(v string) {
	o.TranscriptId = v
}

// GetGeneId returns the GeneId field value
func (o *EnsemblTranscript) GetGeneId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GeneId
}

// GetGeneIdOk returns a tuple with the GeneId field value
// and a boolean to check if the value has been set.
func (o *EnsemblTranscript) GetGeneIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.GeneId, true
}

// SetGeneId sets field value
func (o *EnsemblTranscript) SetGeneId(v string) {
	o.GeneId = v
}

// GetProteinId returns the ProteinId field value
func (o *EnsemblTranscript) GetProteinId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProteinId
}

// GetProteinIdOk returns a tuple with the ProteinId field value
// and a boolean to check if the value has been set.
func (o *EnsemblTranscript) GetProteinIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ProteinId, true
}

// SetProteinId sets field value
func (o *EnsemblTranscript) SetProteinId(v string) {
	o.ProteinId = v
}

// GetProteinLength returns the ProteinLength field value if set, zero value otherwise.
func (o *EnsemblTranscript) GetProteinLength() int32 {
	if o == nil || isNil(o.ProteinLength) {
		var ret int32
		return ret
	}
	return *o.ProteinLength
}

// GetProteinLengthOk returns a tuple with the ProteinLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnsemblTranscript) GetProteinLengthOk() (*int32, bool) {
	if o == nil || isNil(o.ProteinLength) {
    return nil, false
	}
	return o.ProteinLength, true
}

// HasProteinLength returns a boolean if a field has been set.
func (o *EnsemblTranscript) HasProteinLength() bool {
	if o != nil && !isNil(o.ProteinLength) {
		return true
	}

	return false
}

// SetProteinLength gets a reference to the given int32 and assigns it to the ProteinLength field.
func (o *EnsemblTranscript) SetProteinLength(v int32) {
	o.ProteinLength = &v
}

// GetPfamDomains returns the PfamDomains field value if set, zero value otherwise.
func (o *EnsemblTranscript) GetPfamDomains() []PfamDomainRange {
	if o == nil || isNil(o.PfamDomains) {
		var ret []PfamDomainRange
		return ret
	}
	return o.PfamDomains
}

// GetPfamDomainsOk returns a tuple with the PfamDomains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnsemblTranscript) GetPfamDomainsOk() ([]PfamDomainRange, bool) {
	if o == nil || isNil(o.PfamDomains) {
    return nil, false
	}
	return o.PfamDomains, true
}

// HasPfamDomains returns a boolean if a field has been set.
func (o *EnsemblTranscript) HasPfamDomains() bool {
	if o != nil && !isNil(o.PfamDomains) {
		return true
	}

	return false
}

// SetPfamDomains gets a reference to the given []PfamDomainRange and assigns it to the PfamDomains field.
func (o *EnsemblTranscript) SetPfamDomains(v []PfamDomainRange) {
	o.PfamDomains = v
}

// GetHugoSymbols returns the HugoSymbols field value if set, zero value otherwise.
func (o *EnsemblTranscript) GetHugoSymbols() []string {
	if o == nil || isNil(o.HugoSymbols) {
		var ret []string
		return ret
	}
	return o.HugoSymbols
}

// GetHugoSymbolsOk returns a tuple with the HugoSymbols field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnsemblTranscript) GetHugoSymbolsOk() ([]string, bool) {
	if o == nil || isNil(o.HugoSymbols) {
    return nil, false
	}
	return o.HugoSymbols, true
}

// HasHugoSymbols returns a boolean if a field has been set.
func (o *EnsemblTranscript) HasHugoSymbols() bool {
	if o != nil && !isNil(o.HugoSymbols) {
		return true
	}

	return false
}

// SetHugoSymbols gets a reference to the given []string and assigns it to the HugoSymbols field.
func (o *EnsemblTranscript) SetHugoSymbols(v []string) {
	o.HugoSymbols = v
}

// GetRefseqMrnaId returns the RefseqMrnaId field value if set, zero value otherwise.
func (o *EnsemblTranscript) GetRefseqMrnaId() string {
	if o == nil || isNil(o.RefseqMrnaId) {
		var ret string
		return ret
	}
	return *o.RefseqMrnaId
}

// GetRefseqMrnaIdOk returns a tuple with the RefseqMrnaId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnsemblTranscript) GetRefseqMrnaIdOk() (*string, bool) {
	if o == nil || isNil(o.RefseqMrnaId) {
    return nil, false
	}
	return o.RefseqMrnaId, true
}

// HasRefseqMrnaId returns a boolean if a field has been set.
func (o *EnsemblTranscript) HasRefseqMrnaId() bool {
	if o != nil && !isNil(o.RefseqMrnaId) {
		return true
	}

	return false
}

// SetRefseqMrnaId gets a reference to the given string and assigns it to the RefseqMrnaId field.
func (o *EnsemblTranscript) SetRefseqMrnaId(v string) {
	o.RefseqMrnaId = &v
}

// GetCcdsId returns the CcdsId field value if set, zero value otherwise.
func (o *EnsemblTranscript) GetCcdsId() string {
	if o == nil || isNil(o.CcdsId) {
		var ret string
		return ret
	}
	return *o.CcdsId
}

// GetCcdsIdOk returns a tuple with the CcdsId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnsemblTranscript) GetCcdsIdOk() (*string, bool) {
	if o == nil || isNil(o.CcdsId) {
    return nil, false
	}
	return o.CcdsId, true
}

// HasCcdsId returns a boolean if a field has been set.
func (o *EnsemblTranscript) HasCcdsId() bool {
	if o != nil && !isNil(o.CcdsId) {
		return true
	}

	return false
}

// SetCcdsId gets a reference to the given string and assigns it to the CcdsId field.
func (o *EnsemblTranscript) SetCcdsId(v string) {
	o.CcdsId = &v
}

// GetExons returns the Exons field value if set, zero value otherwise.
func (o *EnsemblTranscript) GetExons() []Exon {
	if o == nil || isNil(o.Exons) {
		var ret []Exon
		return ret
	}
	return o.Exons
}

// GetExonsOk returns a tuple with the Exons field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnsemblTranscript) GetExonsOk() ([]Exon, bool) {
	if o == nil || isNil(o.Exons) {
    return nil, false
	}
	return o.Exons, true
}

// HasExons returns a boolean if a field has been set.
func (o *EnsemblTranscript) HasExons() bool {
	if o != nil && !isNil(o.Exons) {
		return true
	}

	return false
}

// SetExons gets a reference to the given []Exon and assigns it to the Exons field.
func (o *EnsemblTranscript) SetExons(v []Exon) {
	o.Exons = v
}

// GetUtrs returns the Utrs field value if set, zero value otherwise.
func (o *EnsemblTranscript) GetUtrs() []UntranslatedRegion {
	if o == nil || isNil(o.Utrs) {
		var ret []UntranslatedRegion
		return ret
	}
	return o.Utrs
}

// GetUtrsOk returns a tuple with the Utrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnsemblTranscript) GetUtrsOk() ([]UntranslatedRegion, bool) {
	if o == nil || isNil(o.Utrs) {
    return nil, false
	}
	return o.Utrs, true
}

// HasUtrs returns a boolean if a field has been set.
func (o *EnsemblTranscript) HasUtrs() bool {
	if o != nil && !isNil(o.Utrs) {
		return true
	}

	return false
}

// SetUtrs gets a reference to the given []UntranslatedRegion and assigns it to the Utrs field.
func (o *EnsemblTranscript) SetUtrs(v []UntranslatedRegion) {
	o.Utrs = v
}

func (o EnsemblTranscript) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.UniprotId) {
		toSerialize["uniprotId"] = o.UniprotId
	}
	if true {
		toSerialize["transcriptId"] = o.TranscriptId
	}
	if true {
		toSerialize["geneId"] = o.GeneId
	}
	if true {
		toSerialize["proteinId"] = o.ProteinId
	}
	if !isNil(o.ProteinLength) {
		toSerialize["proteinLength"] = o.ProteinLength
	}
	if !isNil(o.PfamDomains) {
		toSerialize["pfamDomains"] = o.PfamDomains
	}
	if !isNil(o.HugoSymbols) {
		toSerialize["hugoSymbols"] = o.HugoSymbols
	}
	if !isNil(o.RefseqMrnaId) {
		toSerialize["refseqMrnaId"] = o.RefseqMrnaId
	}
	if !isNil(o.CcdsId) {
		toSerialize["ccdsId"] = o.CcdsId
	}
	if !isNil(o.Exons) {
		toSerialize["exons"] = o.Exons
	}
	if !isNil(o.Utrs) {
		toSerialize["utrs"] = o.Utrs
	}
	return json.Marshal(toSerialize)
}

type NullableEnsemblTranscript struct {
	value *EnsemblTranscript
	isSet bool
}

func (v NullableEnsemblTranscript) Get() *EnsemblTranscript {
	return v.value
}

func (v *NullableEnsemblTranscript) Set(val *EnsemblTranscript) {
	v.value = val
	v.isSet = true
}

func (v NullableEnsemblTranscript) IsSet() bool {
	return v.isSet
}

func (v *NullableEnsemblTranscript) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnsemblTranscript(val *EnsemblTranscript) *NullableEnsemblTranscript {
	return &NullableEnsemblTranscript{value: val, isSet: true}
}

func (v NullableEnsemblTranscript) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnsemblTranscript) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


