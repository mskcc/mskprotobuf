/*
Genome Nexus API

This page shows how to use HTTP requests to access the Genome Nexus API. There are more high level clients available in Python, R, JavaScript, TypeScript and various other languages as well as a command line client to annotate MAF and VCF. See https://docs.genomenexus.org/api.  Aside from programmatic clients there are web based tools to annotate variants, see https://docs.genomenexus.org/tools.   We currently only provide long-term support for the '/annotation' endpoint. The other endpoints might change.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package genome_nexus_internal_api

import (
	"encoding/json"
)

// PfamDomainRange struct for PfamDomainRange
type PfamDomainRange struct {
	// Pfam domain id
	PfamDomainId string `json:"pfamDomainId"`
	// Pfam domain start amino acid
	PfamDomainStart int32 `json:"pfamDomainStart"`
	// Pfam domain end amino acid
	PfamDomainEnd int32 `json:"pfamDomainEnd"`
}

// NewPfamDomainRange instantiates a new PfamDomainRange object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPfamDomainRange(pfamDomainId string, pfamDomainStart int32, pfamDomainEnd int32) *PfamDomainRange {
	this := PfamDomainRange{}
	this.PfamDomainId = pfamDomainId
	this.PfamDomainStart = pfamDomainStart
	this.PfamDomainEnd = pfamDomainEnd
	return &this
}

// NewPfamDomainRangeWithDefaults instantiates a new PfamDomainRange object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPfamDomainRangeWithDefaults() *PfamDomainRange {
	this := PfamDomainRange{}
	return &this
}

// GetPfamDomainId returns the PfamDomainId field value
func (o *PfamDomainRange) GetPfamDomainId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PfamDomainId
}

// GetPfamDomainIdOk returns a tuple with the PfamDomainId field value
// and a boolean to check if the value has been set.
func (o *PfamDomainRange) GetPfamDomainIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.PfamDomainId, true
}

// SetPfamDomainId sets field value
func (o *PfamDomainRange) SetPfamDomainId(v string) {
	o.PfamDomainId = v
}

// GetPfamDomainStart returns the PfamDomainStart field value
func (o *PfamDomainRange) GetPfamDomainStart() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PfamDomainStart
}

// GetPfamDomainStartOk returns a tuple with the PfamDomainStart field value
// and a boolean to check if the value has been set.
func (o *PfamDomainRange) GetPfamDomainStartOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.PfamDomainStart, true
}

// SetPfamDomainStart sets field value
func (o *PfamDomainRange) SetPfamDomainStart(v int32) {
	o.PfamDomainStart = v
}

// GetPfamDomainEnd returns the PfamDomainEnd field value
func (o *PfamDomainRange) GetPfamDomainEnd() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PfamDomainEnd
}

// GetPfamDomainEndOk returns a tuple with the PfamDomainEnd field value
// and a boolean to check if the value has been set.
func (o *PfamDomainRange) GetPfamDomainEndOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.PfamDomainEnd, true
}

// SetPfamDomainEnd sets field value
func (o *PfamDomainRange) SetPfamDomainEnd(v int32) {
	o.PfamDomainEnd = v
}

func (o PfamDomainRange) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["pfamDomainId"] = o.PfamDomainId
	}
	if true {
		toSerialize["pfamDomainStart"] = o.PfamDomainStart
	}
	if true {
		toSerialize["pfamDomainEnd"] = o.PfamDomainEnd
	}
	return json.Marshal(toSerialize)
}

type NullablePfamDomainRange struct {
	value *PfamDomainRange
	isSet bool
}

func (v NullablePfamDomainRange) Get() *PfamDomainRange {
	return v.value
}

func (v *NullablePfamDomainRange) Set(val *PfamDomainRange) {
	v.value = val
	v.isSet = true
}

func (v NullablePfamDomainRange) IsSet() bool {
	return v.isSet
}

func (v *NullablePfamDomainRange) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePfamDomainRange(val *PfamDomainRange) *NullablePfamDomainRange {
	return &NullablePfamDomainRange{value: val, isSet: true}
}

func (v NullablePfamDomainRange) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePfamDomainRange) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


