/*
Genome Nexus API

This page shows how to use HTTP requests to access the Genome Nexus API. There are more high level clients available in Python, R, JavaScript, TypeScript and various other languages as well as a command line client to annotate MAF and VCF. See https://docs.genomenexus.org/api.  Aside from programmatic clients there are web based tools to annotate variants, see https://docs.genomenexus.org/tools.   We currently only provide long-term support for the '/annotation' endpoint. The other endpoints might change.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package genome_nexus_public_api

import (
	"encoding/json"
)

// HrdScore struct for HrdScore
type HrdScore struct {
	// Median HRD Fraction LOH
	FractionLoh *float64 `json:"fractionLoh,omitempty"`
	// Median HRD LST
	Lst *float64 `json:"lst,omitempty"`
	// Median HRD ntelomeric AI
	NtelomericAi *float64 `json:"ntelomericAi,omitempty"`
}

// NewHrdScore instantiates a new HrdScore object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHrdScore() *HrdScore {
	this := HrdScore{}
	return &this
}

// NewHrdScoreWithDefaults instantiates a new HrdScore object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHrdScoreWithDefaults() *HrdScore {
	this := HrdScore{}
	return &this
}

// GetFractionLoh returns the FractionLoh field value if set, zero value otherwise.
func (o *HrdScore) GetFractionLoh() float64 {
	if o == nil || isNil(o.FractionLoh) {
		var ret float64
		return ret
	}
	return *o.FractionLoh
}

// GetFractionLohOk returns a tuple with the FractionLoh field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HrdScore) GetFractionLohOk() (*float64, bool) {
	if o == nil || isNil(o.FractionLoh) {
    return nil, false
	}
	return o.FractionLoh, true
}

// HasFractionLoh returns a boolean if a field has been set.
func (o *HrdScore) HasFractionLoh() bool {
	if o != nil && !isNil(o.FractionLoh) {
		return true
	}

	return false
}

// SetFractionLoh gets a reference to the given float64 and assigns it to the FractionLoh field.
func (o *HrdScore) SetFractionLoh(v float64) {
	o.FractionLoh = &v
}

// GetLst returns the Lst field value if set, zero value otherwise.
func (o *HrdScore) GetLst() float64 {
	if o == nil || isNil(o.Lst) {
		var ret float64
		return ret
	}
	return *o.Lst
}

// GetLstOk returns a tuple with the Lst field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HrdScore) GetLstOk() (*float64, bool) {
	if o == nil || isNil(o.Lst) {
    return nil, false
	}
	return o.Lst, true
}

// HasLst returns a boolean if a field has been set.
func (o *HrdScore) HasLst() bool {
	if o != nil && !isNil(o.Lst) {
		return true
	}

	return false
}

// SetLst gets a reference to the given float64 and assigns it to the Lst field.
func (o *HrdScore) SetLst(v float64) {
	o.Lst = &v
}

// GetNtelomericAi returns the NtelomericAi field value if set, zero value otherwise.
func (o *HrdScore) GetNtelomericAi() float64 {
	if o == nil || isNil(o.NtelomericAi) {
		var ret float64
		return ret
	}
	return *o.NtelomericAi
}

// GetNtelomericAiOk returns a tuple with the NtelomericAi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HrdScore) GetNtelomericAiOk() (*float64, bool) {
	if o == nil || isNil(o.NtelomericAi) {
    return nil, false
	}
	return o.NtelomericAi, true
}

// HasNtelomericAi returns a boolean if a field has been set.
func (o *HrdScore) HasNtelomericAi() bool {
	if o != nil && !isNil(o.NtelomericAi) {
		return true
	}

	return false
}

// SetNtelomericAi gets a reference to the given float64 and assigns it to the NtelomericAi field.
func (o *HrdScore) SetNtelomericAi(v float64) {
	o.NtelomericAi = &v
}

func (o HrdScore) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.FractionLoh) {
		toSerialize["fractionLoh"] = o.FractionLoh
	}
	if !isNil(o.Lst) {
		toSerialize["lst"] = o.Lst
	}
	if !isNil(o.NtelomericAi) {
		toSerialize["ntelomericAi"] = o.NtelomericAi
	}
	return json.Marshal(toSerialize)
}

type NullableHrdScore struct {
	value *HrdScore
	isSet bool
}

func (v NullableHrdScore) Get() *HrdScore {
	return v.value
}

func (v *NullableHrdScore) Set(val *HrdScore) {
	v.value = val
	v.isSet = true
}

func (v NullableHrdScore) IsSet() bool {
	return v.isSet
}

func (v *NullableHrdScore) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHrdScore(val *HrdScore) *NullableHrdScore {
	return &NullableHrdScore{value: val, isSet: true}
}

func (v NullableHrdScore) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHrdScore) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


