/*
Genome Nexus API

This page shows how to use HTTP requests to access the Genome Nexus API. There are more high level clients available in Python, R, JavaScript, TypeScript and various other languages as well as a command line client to annotate MAF and VCF. See https://docs.genomenexus.org/api.  Aside from programmatic clients there are web based tools to annotate variants, see https://docs.genomenexus.org/tools.   We currently only provide long-term support for the '/annotation' endpoint. The other endpoints might change.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package genome_nexus_public_api

import (
	"encoding/json"
)

// TranscriptConsequenceSummary struct for TranscriptConsequenceSummary
type TranscriptConsequenceSummary struct {
	// Alt Amino Acid
	AminoAcidAlt *string `json:"aminoAcidAlt,omitempty"`
	// Reference Amino Acid
	AminoAcidRef *string `json:"aminoAcidRef,omitempty"`
	// Amino acids change
	AminoAcids *string `json:"aminoAcids,omitempty"`
	// Codon change
	CodonChange *string `json:"codonChange,omitempty"`
	// Consequence terms (comma separated)
	ConsequenceTerms *string `json:"consequenceTerms,omitempty"`
	// Entrez gene id
	EntrezGeneId *string `json:"entrezGeneId,omitempty"`
	Exon *string `json:"exon,omitempty"`
	// HGVSc
	Hgvsc *string `json:"hgvsc,omitempty"`
	// HGVSp
	Hgvsp *string `json:"hgvsp,omitempty"`
	// HGVSp short
	HgvspShort *string `json:"hgvspShort,omitempty"`
	// Hugo gene symbol
	HugoGeneSymbol *string `json:"hugoGeneSymbol,omitempty"`
	IsVue *bool `json:"isVue,omitempty"`
	// Polyphen Prediction
	PolyphenPrediction *string `json:"polyphenPrediction,omitempty"`
	// Polyphen Score
	PolyphenScore *float64 `json:"polyphenScore,omitempty"`
	ProteinPosition *IntegerRange `json:"proteinPosition,omitempty"`
	// RefSeq id
	RefSeq *string `json:"refSeq,omitempty"`
	// Sift Prediction
	SiftPrediction *string `json:"siftPrediction,omitempty"`
	// Sift Score
	SiftScore *float64 `json:"siftScore,omitempty"`
	// Transcript id
	TranscriptId string `json:"transcriptId"`
	// Uniprot ID
	UniprotId *string `json:"uniprotId,omitempty"`
	// Variant classification
	VariantClassification *string `json:"variantClassification,omitempty"`
}

// NewTranscriptConsequenceSummary instantiates a new TranscriptConsequenceSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTranscriptConsequenceSummary(transcriptId string) *TranscriptConsequenceSummary {
	this := TranscriptConsequenceSummary{}
	this.TranscriptId = transcriptId
	return &this
}

// NewTranscriptConsequenceSummaryWithDefaults instantiates a new TranscriptConsequenceSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTranscriptConsequenceSummaryWithDefaults() *TranscriptConsequenceSummary {
	this := TranscriptConsequenceSummary{}
	return &this
}

// GetAminoAcidAlt returns the AminoAcidAlt field value if set, zero value otherwise.
func (o *TranscriptConsequenceSummary) GetAminoAcidAlt() string {
	if o == nil || isNil(o.AminoAcidAlt) {
		var ret string
		return ret
	}
	return *o.AminoAcidAlt
}

// GetAminoAcidAltOk returns a tuple with the AminoAcidAlt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranscriptConsequenceSummary) GetAminoAcidAltOk() (*string, bool) {
	if o == nil || isNil(o.AminoAcidAlt) {
    return nil, false
	}
	return o.AminoAcidAlt, true
}

// HasAminoAcidAlt returns a boolean if a field has been set.
func (o *TranscriptConsequenceSummary) HasAminoAcidAlt() bool {
	if o != nil && !isNil(o.AminoAcidAlt) {
		return true
	}

	return false
}

// SetAminoAcidAlt gets a reference to the given string and assigns it to the AminoAcidAlt field.
func (o *TranscriptConsequenceSummary) SetAminoAcidAlt(v string) {
	o.AminoAcidAlt = &v
}

// GetAminoAcidRef returns the AminoAcidRef field value if set, zero value otherwise.
func (o *TranscriptConsequenceSummary) GetAminoAcidRef() string {
	if o == nil || isNil(o.AminoAcidRef) {
		var ret string
		return ret
	}
	return *o.AminoAcidRef
}

// GetAminoAcidRefOk returns a tuple with the AminoAcidRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranscriptConsequenceSummary) GetAminoAcidRefOk() (*string, bool) {
	if o == nil || isNil(o.AminoAcidRef) {
    return nil, false
	}
	return o.AminoAcidRef, true
}

// HasAminoAcidRef returns a boolean if a field has been set.
func (o *TranscriptConsequenceSummary) HasAminoAcidRef() bool {
	if o != nil && !isNil(o.AminoAcidRef) {
		return true
	}

	return false
}

// SetAminoAcidRef gets a reference to the given string and assigns it to the AminoAcidRef field.
func (o *TranscriptConsequenceSummary) SetAminoAcidRef(v string) {
	o.AminoAcidRef = &v
}

// GetAminoAcids returns the AminoAcids field value if set, zero value otherwise.
func (o *TranscriptConsequenceSummary) GetAminoAcids() string {
	if o == nil || isNil(o.AminoAcids) {
		var ret string
		return ret
	}
	return *o.AminoAcids
}

// GetAminoAcidsOk returns a tuple with the AminoAcids field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranscriptConsequenceSummary) GetAminoAcidsOk() (*string, bool) {
	if o == nil || isNil(o.AminoAcids) {
    return nil, false
	}
	return o.AminoAcids, true
}

// HasAminoAcids returns a boolean if a field has been set.
func (o *TranscriptConsequenceSummary) HasAminoAcids() bool {
	if o != nil && !isNil(o.AminoAcids) {
		return true
	}

	return false
}

// SetAminoAcids gets a reference to the given string and assigns it to the AminoAcids field.
func (o *TranscriptConsequenceSummary) SetAminoAcids(v string) {
	o.AminoAcids = &v
}

// GetCodonChange returns the CodonChange field value if set, zero value otherwise.
func (o *TranscriptConsequenceSummary) GetCodonChange() string {
	if o == nil || isNil(o.CodonChange) {
		var ret string
		return ret
	}
	return *o.CodonChange
}

// GetCodonChangeOk returns a tuple with the CodonChange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranscriptConsequenceSummary) GetCodonChangeOk() (*string, bool) {
	if o == nil || isNil(o.CodonChange) {
    return nil, false
	}
	return o.CodonChange, true
}

// HasCodonChange returns a boolean if a field has been set.
func (o *TranscriptConsequenceSummary) HasCodonChange() bool {
	if o != nil && !isNil(o.CodonChange) {
		return true
	}

	return false
}

// SetCodonChange gets a reference to the given string and assigns it to the CodonChange field.
func (o *TranscriptConsequenceSummary) SetCodonChange(v string) {
	o.CodonChange = &v
}

// GetConsequenceTerms returns the ConsequenceTerms field value if set, zero value otherwise.
func (o *TranscriptConsequenceSummary) GetConsequenceTerms() string {
	if o == nil || isNil(o.ConsequenceTerms) {
		var ret string
		return ret
	}
	return *o.ConsequenceTerms
}

// GetConsequenceTermsOk returns a tuple with the ConsequenceTerms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranscriptConsequenceSummary) GetConsequenceTermsOk() (*string, bool) {
	if o == nil || isNil(o.ConsequenceTerms) {
    return nil, false
	}
	return o.ConsequenceTerms, true
}

// HasConsequenceTerms returns a boolean if a field has been set.
func (o *TranscriptConsequenceSummary) HasConsequenceTerms() bool {
	if o != nil && !isNil(o.ConsequenceTerms) {
		return true
	}

	return false
}

// SetConsequenceTerms gets a reference to the given string and assigns it to the ConsequenceTerms field.
func (o *TranscriptConsequenceSummary) SetConsequenceTerms(v string) {
	o.ConsequenceTerms = &v
}

// GetEntrezGeneId returns the EntrezGeneId field value if set, zero value otherwise.
func (o *TranscriptConsequenceSummary) GetEntrezGeneId() string {
	if o == nil || isNil(o.EntrezGeneId) {
		var ret string
		return ret
	}
	return *o.EntrezGeneId
}

// GetEntrezGeneIdOk returns a tuple with the EntrezGeneId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranscriptConsequenceSummary) GetEntrezGeneIdOk() (*string, bool) {
	if o == nil || isNil(o.EntrezGeneId) {
    return nil, false
	}
	return o.EntrezGeneId, true
}

// HasEntrezGeneId returns a boolean if a field has been set.
func (o *TranscriptConsequenceSummary) HasEntrezGeneId() bool {
	if o != nil && !isNil(o.EntrezGeneId) {
		return true
	}

	return false
}

// SetEntrezGeneId gets a reference to the given string and assigns it to the EntrezGeneId field.
func (o *TranscriptConsequenceSummary) SetEntrezGeneId(v string) {
	o.EntrezGeneId = &v
}

// GetExon returns the Exon field value if set, zero value otherwise.
func (o *TranscriptConsequenceSummary) GetExon() string {
	if o == nil || isNil(o.Exon) {
		var ret string
		return ret
	}
	return *o.Exon
}

// GetExonOk returns a tuple with the Exon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranscriptConsequenceSummary) GetExonOk() (*string, bool) {
	if o == nil || isNil(o.Exon) {
    return nil, false
	}
	return o.Exon, true
}

// HasExon returns a boolean if a field has been set.
func (o *TranscriptConsequenceSummary) HasExon() bool {
	if o != nil && !isNil(o.Exon) {
		return true
	}

	return false
}

// SetExon gets a reference to the given string and assigns it to the Exon field.
func (o *TranscriptConsequenceSummary) SetExon(v string) {
	o.Exon = &v
}

// GetHgvsc returns the Hgvsc field value if set, zero value otherwise.
func (o *TranscriptConsequenceSummary) GetHgvsc() string {
	if o == nil || isNil(o.Hgvsc) {
		var ret string
		return ret
	}
	return *o.Hgvsc
}

// GetHgvscOk returns a tuple with the Hgvsc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranscriptConsequenceSummary) GetHgvscOk() (*string, bool) {
	if o == nil || isNil(o.Hgvsc) {
    return nil, false
	}
	return o.Hgvsc, true
}

// HasHgvsc returns a boolean if a field has been set.
func (o *TranscriptConsequenceSummary) HasHgvsc() bool {
	if o != nil && !isNil(o.Hgvsc) {
		return true
	}

	return false
}

// SetHgvsc gets a reference to the given string and assigns it to the Hgvsc field.
func (o *TranscriptConsequenceSummary) SetHgvsc(v string) {
	o.Hgvsc = &v
}

// GetHgvsp returns the Hgvsp field value if set, zero value otherwise.
func (o *TranscriptConsequenceSummary) GetHgvsp() string {
	if o == nil || isNil(o.Hgvsp) {
		var ret string
		return ret
	}
	return *o.Hgvsp
}

// GetHgvspOk returns a tuple with the Hgvsp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranscriptConsequenceSummary) GetHgvspOk() (*string, bool) {
	if o == nil || isNil(o.Hgvsp) {
    return nil, false
	}
	return o.Hgvsp, true
}

// HasHgvsp returns a boolean if a field has been set.
func (o *TranscriptConsequenceSummary) HasHgvsp() bool {
	if o != nil && !isNil(o.Hgvsp) {
		return true
	}

	return false
}

// SetHgvsp gets a reference to the given string and assigns it to the Hgvsp field.
func (o *TranscriptConsequenceSummary) SetHgvsp(v string) {
	o.Hgvsp = &v
}

// GetHgvspShort returns the HgvspShort field value if set, zero value otherwise.
func (o *TranscriptConsequenceSummary) GetHgvspShort() string {
	if o == nil || isNil(o.HgvspShort) {
		var ret string
		return ret
	}
	return *o.HgvspShort
}

// GetHgvspShortOk returns a tuple with the HgvspShort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranscriptConsequenceSummary) GetHgvspShortOk() (*string, bool) {
	if o == nil || isNil(o.HgvspShort) {
    return nil, false
	}
	return o.HgvspShort, true
}

// HasHgvspShort returns a boolean if a field has been set.
func (o *TranscriptConsequenceSummary) HasHgvspShort() bool {
	if o != nil && !isNil(o.HgvspShort) {
		return true
	}

	return false
}

// SetHgvspShort gets a reference to the given string and assigns it to the HgvspShort field.
func (o *TranscriptConsequenceSummary) SetHgvspShort(v string) {
	o.HgvspShort = &v
}

// GetHugoGeneSymbol returns the HugoGeneSymbol field value if set, zero value otherwise.
func (o *TranscriptConsequenceSummary) GetHugoGeneSymbol() string {
	if o == nil || isNil(o.HugoGeneSymbol) {
		var ret string
		return ret
	}
	return *o.HugoGeneSymbol
}

// GetHugoGeneSymbolOk returns a tuple with the HugoGeneSymbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranscriptConsequenceSummary) GetHugoGeneSymbolOk() (*string, bool) {
	if o == nil || isNil(o.HugoGeneSymbol) {
    return nil, false
	}
	return o.HugoGeneSymbol, true
}

// HasHugoGeneSymbol returns a boolean if a field has been set.
func (o *TranscriptConsequenceSummary) HasHugoGeneSymbol() bool {
	if o != nil && !isNil(o.HugoGeneSymbol) {
		return true
	}

	return false
}

// SetHugoGeneSymbol gets a reference to the given string and assigns it to the HugoGeneSymbol field.
func (o *TranscriptConsequenceSummary) SetHugoGeneSymbol(v string) {
	o.HugoGeneSymbol = &v
}

// GetIsVue returns the IsVue field value if set, zero value otherwise.
func (o *TranscriptConsequenceSummary) GetIsVue() bool {
	if o == nil || isNil(o.IsVue) {
		var ret bool
		return ret
	}
	return *o.IsVue
}

// GetIsVueOk returns a tuple with the IsVue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranscriptConsequenceSummary) GetIsVueOk() (*bool, bool) {
	if o == nil || isNil(o.IsVue) {
    return nil, false
	}
	return o.IsVue, true
}

// HasIsVue returns a boolean if a field has been set.
func (o *TranscriptConsequenceSummary) HasIsVue() bool {
	if o != nil && !isNil(o.IsVue) {
		return true
	}

	return false
}

// SetIsVue gets a reference to the given bool and assigns it to the IsVue field.
func (o *TranscriptConsequenceSummary) SetIsVue(v bool) {
	o.IsVue = &v
}

// GetPolyphenPrediction returns the PolyphenPrediction field value if set, zero value otherwise.
func (o *TranscriptConsequenceSummary) GetPolyphenPrediction() string {
	if o == nil || isNil(o.PolyphenPrediction) {
		var ret string
		return ret
	}
	return *o.PolyphenPrediction
}

// GetPolyphenPredictionOk returns a tuple with the PolyphenPrediction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranscriptConsequenceSummary) GetPolyphenPredictionOk() (*string, bool) {
	if o == nil || isNil(o.PolyphenPrediction) {
    return nil, false
	}
	return o.PolyphenPrediction, true
}

// HasPolyphenPrediction returns a boolean if a field has been set.
func (o *TranscriptConsequenceSummary) HasPolyphenPrediction() bool {
	if o != nil && !isNil(o.PolyphenPrediction) {
		return true
	}

	return false
}

// SetPolyphenPrediction gets a reference to the given string and assigns it to the PolyphenPrediction field.
func (o *TranscriptConsequenceSummary) SetPolyphenPrediction(v string) {
	o.PolyphenPrediction = &v
}

// GetPolyphenScore returns the PolyphenScore field value if set, zero value otherwise.
func (o *TranscriptConsequenceSummary) GetPolyphenScore() float64 {
	if o == nil || isNil(o.PolyphenScore) {
		var ret float64
		return ret
	}
	return *o.PolyphenScore
}

// GetPolyphenScoreOk returns a tuple with the PolyphenScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranscriptConsequenceSummary) GetPolyphenScoreOk() (*float64, bool) {
	if o == nil || isNil(o.PolyphenScore) {
    return nil, false
	}
	return o.PolyphenScore, true
}

// HasPolyphenScore returns a boolean if a field has been set.
func (o *TranscriptConsequenceSummary) HasPolyphenScore() bool {
	if o != nil && !isNil(o.PolyphenScore) {
		return true
	}

	return false
}

// SetPolyphenScore gets a reference to the given float64 and assigns it to the PolyphenScore field.
func (o *TranscriptConsequenceSummary) SetPolyphenScore(v float64) {
	o.PolyphenScore = &v
}

// GetProteinPosition returns the ProteinPosition field value if set, zero value otherwise.
func (o *TranscriptConsequenceSummary) GetProteinPosition() IntegerRange {
	if o == nil || isNil(o.ProteinPosition) {
		var ret IntegerRange
		return ret
	}
	return *o.ProteinPosition
}

// GetProteinPositionOk returns a tuple with the ProteinPosition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranscriptConsequenceSummary) GetProteinPositionOk() (*IntegerRange, bool) {
	if o == nil || isNil(o.ProteinPosition) {
    return nil, false
	}
	return o.ProteinPosition, true
}

// HasProteinPosition returns a boolean if a field has been set.
func (o *TranscriptConsequenceSummary) HasProteinPosition() bool {
	if o != nil && !isNil(o.ProteinPosition) {
		return true
	}

	return false
}

// SetProteinPosition gets a reference to the given IntegerRange and assigns it to the ProteinPosition field.
func (o *TranscriptConsequenceSummary) SetProteinPosition(v IntegerRange) {
	o.ProteinPosition = &v
}

// GetRefSeq returns the RefSeq field value if set, zero value otherwise.
func (o *TranscriptConsequenceSummary) GetRefSeq() string {
	if o == nil || isNil(o.RefSeq) {
		var ret string
		return ret
	}
	return *o.RefSeq
}

// GetRefSeqOk returns a tuple with the RefSeq field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranscriptConsequenceSummary) GetRefSeqOk() (*string, bool) {
	if o == nil || isNil(o.RefSeq) {
    return nil, false
	}
	return o.RefSeq, true
}

// HasRefSeq returns a boolean if a field has been set.
func (o *TranscriptConsequenceSummary) HasRefSeq() bool {
	if o != nil && !isNil(o.RefSeq) {
		return true
	}

	return false
}

// SetRefSeq gets a reference to the given string and assigns it to the RefSeq field.
func (o *TranscriptConsequenceSummary) SetRefSeq(v string) {
	o.RefSeq = &v
}

// GetSiftPrediction returns the SiftPrediction field value if set, zero value otherwise.
func (o *TranscriptConsequenceSummary) GetSiftPrediction() string {
	if o == nil || isNil(o.SiftPrediction) {
		var ret string
		return ret
	}
	return *o.SiftPrediction
}

// GetSiftPredictionOk returns a tuple with the SiftPrediction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranscriptConsequenceSummary) GetSiftPredictionOk() (*string, bool) {
	if o == nil || isNil(o.SiftPrediction) {
    return nil, false
	}
	return o.SiftPrediction, true
}

// HasSiftPrediction returns a boolean if a field has been set.
func (o *TranscriptConsequenceSummary) HasSiftPrediction() bool {
	if o != nil && !isNil(o.SiftPrediction) {
		return true
	}

	return false
}

// SetSiftPrediction gets a reference to the given string and assigns it to the SiftPrediction field.
func (o *TranscriptConsequenceSummary) SetSiftPrediction(v string) {
	o.SiftPrediction = &v
}

// GetSiftScore returns the SiftScore field value if set, zero value otherwise.
func (o *TranscriptConsequenceSummary) GetSiftScore() float64 {
	if o == nil || isNil(o.SiftScore) {
		var ret float64
		return ret
	}
	return *o.SiftScore
}

// GetSiftScoreOk returns a tuple with the SiftScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranscriptConsequenceSummary) GetSiftScoreOk() (*float64, bool) {
	if o == nil || isNil(o.SiftScore) {
    return nil, false
	}
	return o.SiftScore, true
}

// HasSiftScore returns a boolean if a field has been set.
func (o *TranscriptConsequenceSummary) HasSiftScore() bool {
	if o != nil && !isNil(o.SiftScore) {
		return true
	}

	return false
}

// SetSiftScore gets a reference to the given float64 and assigns it to the SiftScore field.
func (o *TranscriptConsequenceSummary) SetSiftScore(v float64) {
	o.SiftScore = &v
}

// GetTranscriptId returns the TranscriptId field value
func (o *TranscriptConsequenceSummary) GetTranscriptId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TranscriptId
}

// GetTranscriptIdOk returns a tuple with the TranscriptId field value
// and a boolean to check if the value has been set.
func (o *TranscriptConsequenceSummary) GetTranscriptIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.TranscriptId, true
}

// SetTranscriptId sets field value
func (o *TranscriptConsequenceSummary) SetTranscriptId(v string) {
	o.TranscriptId = v
}

// GetUniprotId returns the UniprotId field value if set, zero value otherwise.
func (o *TranscriptConsequenceSummary) GetUniprotId() string {
	if o == nil || isNil(o.UniprotId) {
		var ret string
		return ret
	}
	return *o.UniprotId
}

// GetUniprotIdOk returns a tuple with the UniprotId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranscriptConsequenceSummary) GetUniprotIdOk() (*string, bool) {
	if o == nil || isNil(o.UniprotId) {
    return nil, false
	}
	return o.UniprotId, true
}

// HasUniprotId returns a boolean if a field has been set.
func (o *TranscriptConsequenceSummary) HasUniprotId() bool {
	if o != nil && !isNil(o.UniprotId) {
		return true
	}

	return false
}

// SetUniprotId gets a reference to the given string and assigns it to the UniprotId field.
func (o *TranscriptConsequenceSummary) SetUniprotId(v string) {
	o.UniprotId = &v
}

// GetVariantClassification returns the VariantClassification field value if set, zero value otherwise.
func (o *TranscriptConsequenceSummary) GetVariantClassification() string {
	if o == nil || isNil(o.VariantClassification) {
		var ret string
		return ret
	}
	return *o.VariantClassification
}

// GetVariantClassificationOk returns a tuple with the VariantClassification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranscriptConsequenceSummary) GetVariantClassificationOk() (*string, bool) {
	if o == nil || isNil(o.VariantClassification) {
    return nil, false
	}
	return o.VariantClassification, true
}

// HasVariantClassification returns a boolean if a field has been set.
func (o *TranscriptConsequenceSummary) HasVariantClassification() bool {
	if o != nil && !isNil(o.VariantClassification) {
		return true
	}

	return false
}

// SetVariantClassification gets a reference to the given string and assigns it to the VariantClassification field.
func (o *TranscriptConsequenceSummary) SetVariantClassification(v string) {
	o.VariantClassification = &v
}

func (o TranscriptConsequenceSummary) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AminoAcidAlt) {
		toSerialize["aminoAcidAlt"] = o.AminoAcidAlt
	}
	if !isNil(o.AminoAcidRef) {
		toSerialize["aminoAcidRef"] = o.AminoAcidRef
	}
	if !isNil(o.AminoAcids) {
		toSerialize["aminoAcids"] = o.AminoAcids
	}
	if !isNil(o.CodonChange) {
		toSerialize["codonChange"] = o.CodonChange
	}
	if !isNil(o.ConsequenceTerms) {
		toSerialize["consequenceTerms"] = o.ConsequenceTerms
	}
	if !isNil(o.EntrezGeneId) {
		toSerialize["entrezGeneId"] = o.EntrezGeneId
	}
	if !isNil(o.Exon) {
		toSerialize["exon"] = o.Exon
	}
	if !isNil(o.Hgvsc) {
		toSerialize["hgvsc"] = o.Hgvsc
	}
	if !isNil(o.Hgvsp) {
		toSerialize["hgvsp"] = o.Hgvsp
	}
	if !isNil(o.HgvspShort) {
		toSerialize["hgvspShort"] = o.HgvspShort
	}
	if !isNil(o.HugoGeneSymbol) {
		toSerialize["hugoGeneSymbol"] = o.HugoGeneSymbol
	}
	if !isNil(o.IsVue) {
		toSerialize["isVue"] = o.IsVue
	}
	if !isNil(o.PolyphenPrediction) {
		toSerialize["polyphenPrediction"] = o.PolyphenPrediction
	}
	if !isNil(o.PolyphenScore) {
		toSerialize["polyphenScore"] = o.PolyphenScore
	}
	if !isNil(o.ProteinPosition) {
		toSerialize["proteinPosition"] = o.ProteinPosition
	}
	if !isNil(o.RefSeq) {
		toSerialize["refSeq"] = o.RefSeq
	}
	if !isNil(o.SiftPrediction) {
		toSerialize["siftPrediction"] = o.SiftPrediction
	}
	if !isNil(o.SiftScore) {
		toSerialize["siftScore"] = o.SiftScore
	}
	if true {
		toSerialize["transcriptId"] = o.TranscriptId
	}
	if !isNil(o.UniprotId) {
		toSerialize["uniprotId"] = o.UniprotId
	}
	if !isNil(o.VariantClassification) {
		toSerialize["variantClassification"] = o.VariantClassification
	}
	return json.Marshal(toSerialize)
}

type NullableTranscriptConsequenceSummary struct {
	value *TranscriptConsequenceSummary
	isSet bool
}

func (v NullableTranscriptConsequenceSummary) Get() *TranscriptConsequenceSummary {
	return v.value
}

func (v *NullableTranscriptConsequenceSummary) Set(val *TranscriptConsequenceSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableTranscriptConsequenceSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableTranscriptConsequenceSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTranscriptConsequenceSummary(val *TranscriptConsequenceSummary) *NullableTranscriptConsequenceSummary {
	return &NullableTranscriptConsequenceSummary{value: val, isSet: true}
}

func (v NullableTranscriptConsequenceSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTranscriptConsequenceSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


